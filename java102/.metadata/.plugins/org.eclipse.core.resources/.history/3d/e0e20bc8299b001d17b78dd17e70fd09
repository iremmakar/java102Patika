package maceraOyunu;

import java.util.Random;

public abstract class BattleLoc extends Location{
	
	private Obstacle obstacle;
	private String award;
	private int maxObstacle;
	
	
	public BattleLoc(Player player, String name,Obstacle obstacle,String award,int maxObstacle) {
		super(player, name);
		this.obstacle=obstacle;
		this.award=award;
		this.maxObstacle=maxObstacle;
		// TODO Auto-generated constructor stub
	}

	@Override
	boolean onLocation() {
		int obsNumber = this.randomObstacleNumber();
		
		
		System.out.println("Şu an buradasınız : "+this.getName());
		System.out.println("Dikkatli ol burada"+obsNumber +
		this.getObstacle().getName()+" yaşıyor");
		
		System.out.println("Savaş veya Kaç");
		String select = input.nextLine();
		select=select.toUpperCase();
		
		if(select.equals("S")) {
			
		}
		
		
		
		return true;
	}
	
	public boolean combat(int obsNumber) {
		
		for(int i=1;i<=obsNumber;i++) {
			playerStats();
			obstacleStats();
			
			while(this.getPlayer().getHealth()>0 && this.getObstacle().getHealth()>0) {
				System.out.println("Vur veya kaç");
				String selectCombat = input.nextLine().toUpperCase();
				if(selectCombat.equals("V")) {
					System.out.println("Siz vurdunuz");
					obstacle.setHealth(this.getPlayer().getHealth()-this.getPlayer().getTotalDamage());
					afterHit();
					
					if(this.getObstacle().getHealth()>0) {
						System.out.println("Canavar size vurdu");
						int obstacleDamage = this.getObstacle().getHealth()-this.getPlayer().getInventory().getArmor().getBlock()
						if(obstacleDamage<0) {
							obstacleDamage=0;
						}
						this.getPlayer().setHealth(this.getPlayer().getHealth()-obstacleDamage);
						afterHit();
					}
					
					
				}
			}
			
			
		}
		
		
		return false;
	}
	
	public void afterHit() {
		System.out.println("canınız: " +this.getPlayer().getHealth());
		System.out.println(this.getObstacle().getName()+": "+this.getObstacle().getHealth());
	}
	
	
	
	public void playerStats() {
		System.out.println("Oyuncu değerleri : ");
		System.out.println("Sağlık : " +this.getPlayer().getHealth());
		System.out.println("Damage : "+this.getPlayer().getTotalDamage());
		System.out.println("Para : "+this.getPlayer().getMoney());
		System.out.println("Zırh : "+this.getPlayer().getInventory().getArmor().getName());
		System.out.println("Silah : "+this.getPlayer().getInventory().getWeapon().getName());
		System.out.println("Bloklama : " +this.getPlayer().getInventory().getArmor().getBlock());
	
	}
	
	public void obstacleStats() {
		System.out.println(this.getObstacle().getName() + "değerleri");
		System.out.println("Sağlık :  "+this.getObstacle().getHealth());
		System.out.println("Hasar : "+this.getObstacle().getDamage());
		System.out.println("Ödül : "+this.getObstacle().getDamage());
		System.out.println("Ödül : "+this.getObstacle().getAward());
	}
	
	
	
	public int randomObstacleNumber() {
		Random r = new Random();
		return r.nextInt(this.getMaxObstacle())+1;
	}
	

	public Obstacle getObstacle() {
		return obstacle;
	}

	public void setObstacle(Obstacle obstacle) {
		this.obstacle = obstacle;
	}

	public String getAward() {
		return award;
	}

	public void setAward(String award) {
		this.award = award;
	}

	public int getMaxObstacle() {
		return maxObstacle;
	}

	public void setMaxObstacle(int maxObstacle) {
		this.maxObstacle = maxObstacle;
	}

	
}
